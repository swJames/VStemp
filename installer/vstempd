#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os
import time

from datetime import datetime
from commands import getstatusoutput
from daemon import runner
import sys
sys.path.append('/opt/vstemp/')
from highlight import highlight
import vstemp

argvData = sys.argv
availableOptions = ['start', 'stop', 'restart']
if len(argvData) < 2 or argvData[1] not in availableOptions:
		print highlight("[The supplied arguments are invalid.]", False)
		print highlight("[The options are the following]\n[" + highlight("/etc/init.d/vstempd start|stop|restart", True) + highlight("]"))
		print highlight("[For extra information please refer to vstemp --help]")
		sys.exit()

del argvData
del availableOptions

user = getstatusoutput("whoami")[1]
if user != 'root':
		print highlight("[You need to be root to perform this action]", False)
		sys.exit()
		
del user
if sys.argv[1] == "start":
        print highlight("[STARTING VSTEMP DAEMON]", True)
elif sys.argv[1] == "stop":
        print highlight("[STOPPING VSTEMP DAEMON]", True)
elif sys.argv[1] == "restart":
        print highlight("[RESTARTING VSTEMP DAEMON]", True)

class App():
	def __init__(self):
		self.stdin_path = '/dev/null'
		self.stdout_path = '/dev/tty'
		self.stderr_path = '/dev/tty'
		self.pidfile_path = '/var/run/vstempd.pid'
		self.pidfile_timeout = 5
		self.temperature = vstemp.getTemperature()
		self.refreshrate = self.temperature.config['REFRESHRATE']

	def run(self):
		while True:
			self.temperature.getTemp()
			time.sleep(self.refreshrate)

app = App()
daemon_runner = runner.DaemonRunner(app)
daemon_runner.do_action()
